require 'test_helper'

class DownloadsGeneratorsVulnerabilityTest < ActiveSupport::TestCase
  test '::generate, given a ProtectedArea, returns a path to the created csv' do
    pa = FactoryGirl.build(:protected_area)
    expected_path = Rails.root.join("tmp/downloads/#{pa.wdpa_id}_vulnerability.csv")

    CSV.stubs(:open)
    assert_equal expected_path, Downloads::Generators::Vulnerability.generate(pa)
  end

  test '::generate, given a ProtectedArea, creates a csv file' do
    taxo_class = FactoryGirl.create(:taxonomic_class, name: 'the class')
    taxo_order = FactoryGirl.create(:taxonomic_order,
      name: 'the order', taxonomic_class: taxo_class
    )

    pa = FactoryGirl.create(:protected_area)
    species = FactoryGirl.create(
      :species,
      name: 'Antilocapra',
      taxonomic_order: taxo_order,
      iucn_cat: 'LC',
      sensitivity: '1,2,3',
      adaptability: '1,3,4',
      exposure_2025: '1,3',
      exposure_2055: nil
    )

    pa.species_protected_areas << FactoryGirl.create(
      :species_protected_area,
      protected_area: pa,
      species: species,
      overlap_percentage: 20.0
    )


    csv_mock = mock
    csv_mock.expects(:<<).with(Downloads::Generators::Vulnerability::HEADERS)
    csv_mock.expects(:<<).with(['Antilocapra', 'the order', 'the class', 'LC', true, false, 20.0, '1,2,3', '1,3,4'])
    CSV.stubs(:open).yields(csv_mock)

    Downloads::Generators::Vulnerability.generate(pa)
  end
end

